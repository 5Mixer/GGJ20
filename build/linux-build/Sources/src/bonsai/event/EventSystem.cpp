// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_bonsai_event_EventSystem
#include <hxinc/bonsai/event/EventSystem.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d06aab7413059a95_4_new,"bonsai.event.EventSystem","new",0xe79c1cf3,"bonsai.event.EventSystem.new","bonsai/event/EventSystem.hx",4,0x63d1081f)
HX_LOCAL_STACK_FRAME(_hx_pos_d06aab7413059a95_7_listen,"bonsai.event.EventSystem","listen",0x63135994,"bonsai.event.EventSystem.listen","bonsai/event/EventSystem.hx",7,0x63d1081f)
HX_LOCAL_STACK_FRAME(_hx_pos_d06aab7413059a95_10_dispatch,"bonsai.event.EventSystem","dispatch",0xb7fe0d47,"bonsai.event.EventSystem.dispatch","bonsai/event/EventSystem.hx",10,0x63d1081f)
namespace bonsai{
namespace event{

void EventSystem_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d06aab7413059a95_4_new)
            	}

Dynamic EventSystem_obj::__CreateEmpty() { return new EventSystem_obj; }

void *EventSystem_obj::_hx_vtable = 0;

Dynamic EventSystem_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< EventSystem_obj > _hx_result = new EventSystem_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool EventSystem_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1eeb9be9;
}

void EventSystem_obj::listen( ::Dynamic event){
            	HX_STACKFRAME(&_hx_pos_d06aab7413059a95_7_listen)
            	}


HX_DEFINE_DYNAMIC_FUNC1(EventSystem_obj,listen,(void))

void EventSystem_obj::dispatch( ::Dynamic event){
            	HX_STACKFRAME(&_hx_pos_d06aab7413059a95_10_dispatch)
            	}


HX_DEFINE_DYNAMIC_FUNC1(EventSystem_obj,dispatch,(void))


EventSystem_obj::EventSystem_obj()
{
}

hx::Val EventSystem_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"listen") ) { return hx::Val( listen_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"dispatch") ) { return hx::Val( dispatch_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *EventSystem_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *EventSystem_obj_sStaticStorageInfo = 0;
#endif

static ::String EventSystem_obj_sMemberFields[] = {
	HX_("listen",47,c8,f9,ef),
	HX_("dispatch",ba,ce,63,1e),
	::String(null()) };

hx::Class EventSystem_obj::__mClass;

void EventSystem_obj::__register()
{
	EventSystem_obj _hx_dummy;
	EventSystem_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("bonsai.event.EventSystem",81,27,90,d9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(EventSystem_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< EventSystem_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = EventSystem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = EventSystem_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace bonsai
} // end namespace event
