// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <hxinc/Reflect.h>
#endif
#ifndef INCLUDED_kha_Assets
#include <hxinc/kha/Assets.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha__Assets_ImageList
#include <hxinc/kha/_Assets/ImageList.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f30eae4745d61cf6_9_new,"kha._Assets.ImageList","new",0x9d995fb5,"kha._Assets.ImageList.new","kha/Assets.hx",9,0x66f27110)
static const ::String _hx_array_data_acc06143_1[] = {
	HX_("body1",4f,d3,ef,b6),
};
static const ::String _hx_array_data_acc06143_2[] = {
	HX_("body1.k",8c,ad,06,31),
};
static const int _hx_array_data_acc06143_3[] = {
	(int)1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f30eae4745d61cf6_15_get,"kha._Assets.ImageList","get",0x9d940feb,"kha._Assets.ImageList.get","kha/Assets.hx",15,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_163c20c569b85260_126_body1Load,"kha._Assets.ImageList","body1Load",0x41092a2a,"kha._Assets.ImageList.body1Load","kha/internal/AssetsBuilder.hx",126,0x6901246d)
HX_LOCAL_STACK_FRAME(_hx_pos_163c20c569b85260_176_body1Unload,"kha._Assets.ImageList","body1Unload",0x82653a03,"kha._Assets.ImageList.body1Unload","kha/internal/AssetsBuilder.hx",176,0x6901246d)
namespace kha{
namespace _Assets{

void ImageList_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_f30eae4745d61cf6_9_new)
HXLINE( 191)		this->_hx_set_names(HX_CTX, ::Array_obj< ::String >::fromData( _hx_array_data_acc06143_1,1));
HXLINE( 118)		this->_hx_set_body1Description(HX_CTX,  ::Dynamic(hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("original_width",58,c4,9b,c9),32)
            			->setFixed(1,HX_("files",77,de,98,00),::Array_obj< ::String >::fromData( _hx_array_data_acc06143_2,1))
            			->setFixed(2,HX_("file_sizes",4f,23,b0,24),::Array_obj< int >::fromData( _hx_array_data_acc06143_3,1))
            			->setFixed(3,HX_("name",4b,72,ff,48),HX_("body1",4f,d3,ef,b6))
            			->setFixed(4,HX_("type",ba,f2,08,4d),HX_("image",5b,1f,69,bd))
            			->setFixed(5,HX_("original_height",55,81,ff,54),128)));
HXLINE( 110)		this->_hx_set_body1Name(HX_CTX, HX_("body1",4f,d3,ef,b6));
HXLINE(  69)		this->_hx_set_body1(HX_CTX, null());
            	}

Dynamic ImageList_obj::__CreateEmpty() { return new ImageList_obj; }

void *ImageList_obj::_hx_vtable = 0;

Dynamic ImageList_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ImageList_obj > _hx_result = new ImageList_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ImageList_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7afe145b;
}

 ::kha::Image ImageList_obj::get(::String name){
            	HX_STACKFRAME(&_hx_pos_f30eae4745d61cf6_15_get)
HXDLIN(  15)		return ( ( ::kha::Image)(::Reflect_obj::field(hx::ObjectPtr<OBJ_>(this),name)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(ImageList_obj,get,return )

void ImageList_obj::body1Load( ::Dynamic done, ::Dynamic failure){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::Image image){
            			HX_STACKFRAME(&_hx_pos_163c20c569b85260_126_body1Load)
HXDLIN( 126)			done();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_163c20c569b85260_126_body1Load)
HXDLIN( 126)		::kha::Assets_obj::loadImage(HX_("body1",4f,d3,ef,b6), ::Dynamic(new _hx_Closure_0(done)),failure,hx::SourceInfo(HX_("kha/internal/AssetsBuilder.hx",6d,24,01,69),126,HX_("kha._Assets.ImageList",43,61,c0,ac),HX_("body1Load",15,ed,0d,96)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(ImageList_obj,body1Load,(void))

void ImageList_obj::body1Unload(){
            	HX_GC_STACKFRAME(&_hx_pos_163c20c569b85260_176_body1Unload)
HXLINE( 177)		this->body1->unload();
HXLINE( 178)		this->_hx_set_body1(HX_CTX, null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ImageList_obj,body1Unload,(void))


hx::ObjectPtr< ImageList_obj > ImageList_obj::__new() {
	hx::ObjectPtr< ImageList_obj > __this = new ImageList_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ImageList_obj > ImageList_obj::__alloc(hx::Ctx *_hx_ctx) {
	ImageList_obj *__this = (ImageList_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ImageList_obj), true, "kha._Assets.ImageList"));
	*(void **)__this = ImageList_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ImageList_obj::ImageList_obj()
{
}

void ImageList_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ImageList);
	HX_MARK_MEMBER_NAME(body1,"body1");
	HX_MARK_MEMBER_NAME(body1Name,"body1Name");
	HX_MARK_MEMBER_NAME(body1Description,"body1Description");
	HX_MARK_MEMBER_NAME(names,"names");
	HX_MARK_END_CLASS();
}

void ImageList_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(body1,"body1");
	HX_VISIT_MEMBER_NAME(body1Name,"body1Name");
	HX_VISIT_MEMBER_NAME(body1Description,"body1Description");
	HX_VISIT_MEMBER_NAME(names,"names");
}

hx::Val ImageList_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"body1") ) { return hx::Val( body1 ); }
		if (HX_FIELD_EQ(inName,"names") ) { return hx::Val( names ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"body1Name") ) { return hx::Val( body1Name ); }
		if (HX_FIELD_EQ(inName,"body1Load") ) { return hx::Val( body1Load_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"body1Unload") ) { return hx::Val( body1Unload_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"body1Description") ) { return hx::Val( body1Description ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ImageList_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"body1") ) { _hx_set_body1(HX_CTX_GET,inValue.Cast<  ::kha::Image >()); return inValue; }
		if (HX_FIELD_EQ(inName,"names") ) { _hx_set_names(HX_CTX_GET,inValue.Cast< ::Array< ::String > >()); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"body1Name") ) { _hx_set_body1Name(HX_CTX_GET,inValue.Cast< ::String >()); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"body1Description") ) { _hx_set_body1Description(HX_CTX_GET,inValue.Cast<  ::Dynamic >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ImageList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("body1",4f,d3,ef,b6));
	outFields->push(HX_("body1Name",3a,c5,55,97));
	outFields->push(HX_("body1Description",ed,81,2d,b6));
	outFields->push(HX_("names",c8,8f,84,96));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ImageList_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::kha::Image */ ,(int)offsetof(ImageList_obj,body1),HX_("body1",4f,d3,ef,b6)},
	{hx::fsString,(int)offsetof(ImageList_obj,body1Name),HX_("body1Name",3a,c5,55,97)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ImageList_obj,body1Description),HX_("body1Description",ed,81,2d,b6)},
	{hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(ImageList_obj,names),HX_("names",c8,8f,84,96)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ImageList_obj_sStaticStorageInfo = 0;
#endif

static ::String ImageList_obj_sMemberFields[] = {
	HX_("get",96,80,4e,00),
	HX_("body1",4f,d3,ef,b6),
	HX_("body1Name",3a,c5,55,97),
	HX_("body1Description",ed,81,2d,b6),
	HX_("body1Load",15,ed,0d,96),
	HX_("body1Unload",ae,cd,50,b4),
	HX_("names",c8,8f,84,96),
	::String(null()) };

hx::Class ImageList_obj::__mClass;

void ImageList_obj::__register()
{
	ImageList_obj _hx_dummy;
	ImageList_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("kha._Assets.ImageList",43,61,c0,ac);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ImageList_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ImageList_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ImageList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ImageList_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace _Assets
