// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_game_LegPart
#include <hxinc/game/LegPart.h>
#endif
namespace game{

::game::LegPart LegPart_obj::Boots;

::game::LegPart LegPart_obj::NaturalLeg;

bool LegPart_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Boots",e1,97,25,4a)) { outValue = LegPart_obj::Boots; return true; }
	if (inName==HX_("NaturalLeg",85,c1,7e,26)) { outValue = LegPart_obj::NaturalLeg; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(LegPart_obj)

int LegPart_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Boots",e1,97,25,4a)) return 1;
	if (inName==HX_("NaturalLeg",85,c1,7e,26)) return 0;
	return super::__FindIndex(inName);
}

int LegPart_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Boots",e1,97,25,4a)) return 0;
	if (inName==HX_("NaturalLeg",85,c1,7e,26)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val LegPart_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Boots",e1,97,25,4a)) return Boots;
	if (inName==HX_("NaturalLeg",85,c1,7e,26)) return NaturalLeg;
	return super::__Field(inName,inCallProp);
}

static ::String LegPart_obj_sStaticFields[] = {
	HX_("NaturalLeg",85,c1,7e,26),
	HX_("Boots",e1,97,25,4a),
	::String(null())
};

hx::Class LegPart_obj::__mClass;

Dynamic __Create_LegPart_obj() { return new LegPart_obj; }

void LegPart_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("game.LegPart",45,3a,2b,e6), hx::TCanCast< LegPart_obj >,LegPart_obj_sStaticFields,0,
	&__Create_LegPart_obj, &__Create,
	&super::__SGetClass(), &CreateLegPart_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &LegPart_obj::__GetStatic;
}

void LegPart_obj::__boot()
{
Boots = hx::CreateConstEnum< LegPart_obj >(HX_("Boots",e1,97,25,4a),1);
NaturalLeg = hx::CreateConstEnum< LegPart_obj >(HX_("NaturalLeg",85,c1,7e,26),0);
}


} // end namespace game
