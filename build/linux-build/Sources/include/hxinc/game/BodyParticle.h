// Generated by Haxe 4.0.5
#ifndef INCLUDED_game_BodyParticle
#define INCLUDED_game_BodyParticle

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(game,BodyPart)
HX_DECLARE_CLASS1(game,BodyParticle)

namespace game{


class HXCPP_CLASS_ATTRIBUTES BodyParticle_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BodyParticle_obj OBJ_;
		BodyParticle_obj();

	public:
		enum { _hx_ClassId = 0x6f7fbd5a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="game.BodyParticle")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"game.BodyParticle"); }

		inline static hx::ObjectPtr< BodyParticle_obj > __new() {
			hx::ObjectPtr< BodyParticle_obj > __this = new BodyParticle_obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< BodyParticle_obj > __alloc(hx::Ctx *_hx_ctx) {
			BodyParticle_obj *__this = (BodyParticle_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BodyParticle_obj), true, "game.BodyParticle"));
			*(void **)__this = BodyParticle_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BodyParticle_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BodyParticle",28,33,3f,eb); }

		Float x;
		Float y;
		Float vz;
		Float z;
		 ::game::BodyPart part;
		inline  ::game::BodyPart _hx_set_part(hx::StackContext *_hx_ctx, ::game::BodyPart _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return part=_hx_v; }
};

} // end namespace game

#endif /* INCLUDED_game_BodyParticle */ 
