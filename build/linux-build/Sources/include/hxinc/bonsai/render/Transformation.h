// Generated by Haxe 4.0.5
#ifndef INCLUDED_bonsai_render_Transformation
#define INCLUDED_bonsai_render_Transformation

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(bonsai,render,Transformation)
HX_DECLARE_CLASS2(kha,graphics2,Graphics)
HX_DECLARE_CLASS2(kha,math,Vector2)

namespace bonsai{
namespace render{


class HXCPP_CLASS_ATTRIBUTES Transformation_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Transformation_obj OBJ_;
		Transformation_obj();

	public:
		enum { _hx_ClassId = 0x22607b09 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="bonsai.render.Transformation")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"bonsai.render.Transformation"); }
		static hx::ObjectPtr< Transformation_obj > __new();
		static hx::ObjectPtr< Transformation_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Transformation_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Transformation",e9,51,85,b4); }

		 ::kha::math::Vector2 offset;
		inline  ::kha::math::Vector2 _hx_set_offset(hx::StackContext *_hx_ctx, ::kha::math::Vector2 _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return offset=_hx_v; }
		Float rotation;
		 ::kha::math::Vector2 scale;
		inline  ::kha::math::Vector2 _hx_set_scale(hx::StackContext *_hx_ctx, ::kha::math::Vector2 _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return scale=_hx_v; }
		 ::kha::math::Vector2 origin;
		inline  ::kha::math::Vector2 _hx_set_origin(hx::StackContext *_hx_ctx, ::kha::math::Vector2 _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return origin=_hx_v; }
		void apply( ::kha::graphics2::Graphics graphics);
		::Dynamic apply_dyn();

		void finish( ::kha::graphics2::Graphics graphics);
		::Dynamic finish_dyn();

};

} // end namespace bonsai
} // end namespace render

#endif /* INCLUDED_bonsai_render_Transformation */ 
