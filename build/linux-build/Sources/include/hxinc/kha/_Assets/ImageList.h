// Generated by Haxe 4.0.5
#ifndef INCLUDED_kha__Assets_ImageList
#define INCLUDED_kha__Assets_ImageList

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Image)
HX_DECLARE_CLASS1(kha,Resource)
HX_DECLARE_CLASS2(kha,_Assets,ImageList)

namespace kha{
namespace _Assets{


class HXCPP_CLASS_ATTRIBUTES ImageList_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ImageList_obj OBJ_;
		ImageList_obj();

	public:
		enum { _hx_ClassId = 0x7afe145b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha._Assets.ImageList")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"kha._Assets.ImageList"); }
		static hx::ObjectPtr< ImageList_obj > __new();
		static hx::ObjectPtr< ImageList_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ImageList_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ImageList",39,91,ba,cb); }

		 ::kha::Image get(::String name);
		::Dynamic get_dyn();

		 ::kha::Image bodyRight;
		inline  ::kha::Image _hx_set_bodyRight(hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return bodyRight=_hx_v; }
		::String bodyRightName;
		inline ::String _hx_set_bodyRightName(hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return bodyRightName=_hx_v; }
		 ::Dynamic bodyRightDescription;
		inline  ::Dynamic _hx_set_bodyRightDescription(hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return bodyRightDescription=_hx_v; }
		void bodyRightLoad( ::Dynamic done, ::Dynamic failure);
		::Dynamic bodyRightLoad_dyn();

		void bodyRightUnload();
		::Dynamic bodyRightUnload_dyn();

		 ::kha::Image chest;
		inline  ::kha::Image _hx_set_chest(hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return chest=_hx_v; }
		::String chestName;
		inline ::String _hx_set_chestName(hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return chestName=_hx_v; }
		 ::Dynamic chestDescription;
		inline  ::Dynamic _hx_set_chestDescription(hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return chestDescription=_hx_v; }
		void chestLoad( ::Dynamic done, ::Dynamic failure);
		::Dynamic chestLoad_dyn();

		void chestUnload();
		::Dynamic chestUnload_dyn();

		 ::kha::Image heads;
		inline  ::kha::Image _hx_set_heads(hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return heads=_hx_v; }
		::String headsName;
		inline ::String _hx_set_headsName(hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return headsName=_hx_v; }
		 ::Dynamic headsDescription;
		inline  ::Dynamic _hx_set_headsDescription(hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return headsDescription=_hx_v; }
		void headsLoad( ::Dynamic done, ::Dynamic failure);
		::Dynamic headsLoad_dyn();

		void headsUnload();
		::Dynamic headsUnload_dyn();

		::Array< ::String > names;
		inline ::Array< ::String > _hx_set_names(hx::StackContext *_hx_ctx,::Array< ::String > _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return names=_hx_v; }
};

} // end namespace kha
} // end namespace _Assets

#endif /* INCLUDED_kha__Assets_ImageList */ 
