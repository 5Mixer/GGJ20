// Generated by Haxe 4.0.5
#ifndef INCLUDED_kha__Assets_ImageList
#define INCLUDED_kha__Assets_ImageList

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Image)
HX_DECLARE_CLASS1(kha,Resource)
HX_DECLARE_CLASS2(kha,_Assets,ImageList)

namespace kha{
namespace _Assets{


class HXCPP_CLASS_ATTRIBUTES ImageList_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ImageList_obj OBJ_;
		ImageList_obj();

	public:
		enum { _hx_ClassId = 0x7afe145b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha._Assets.ImageList")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"kha._Assets.ImageList"); }
		static hx::ObjectPtr< ImageList_obj > __new();
		static hx::ObjectPtr< ImageList_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ImageList_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ImageList",39,91,ba,cb); }

		 ::kha::Image get(::String name);
		::Dynamic get_dyn();

		 ::kha::Image bodyParts;
		inline  ::kha::Image _hx_set_bodyParts(hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return bodyParts=_hx_v; }
		::String bodyPartsName;
		inline ::String _hx_set_bodyPartsName(hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return bodyPartsName=_hx_v; }
		 ::Dynamic bodyPartsDescription;
		inline  ::Dynamic _hx_set_bodyPartsDescription(hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return bodyPartsDescription=_hx_v; }
		void bodyPartsLoad( ::Dynamic done, ::Dynamic failure);
		::Dynamic bodyPartsLoad_dyn();

		void bodyPartsUnload();
		::Dynamic bodyPartsUnload_dyn();

		 ::kha::Image bodyParts2;
		inline  ::kha::Image _hx_set_bodyParts2(hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return bodyParts2=_hx_v; }
		::String bodyParts2Name;
		inline ::String _hx_set_bodyParts2Name(hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return bodyParts2Name=_hx_v; }
		 ::Dynamic bodyParts2Description;
		inline  ::Dynamic _hx_set_bodyParts2Description(hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return bodyParts2Description=_hx_v; }
		void bodyParts2Load( ::Dynamic done, ::Dynamic failure);
		::Dynamic bodyParts2Load_dyn();

		void bodyParts2Unload();
		::Dynamic bodyParts2Unload_dyn();

		 ::kha::Image satanicCircle;
		inline  ::kha::Image _hx_set_satanicCircle(hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return satanicCircle=_hx_v; }
		::String satanicCircleName;
		inline ::String _hx_set_satanicCircleName(hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return satanicCircleName=_hx_v; }
		 ::Dynamic satanicCircleDescription;
		inline  ::Dynamic _hx_set_satanicCircleDescription(hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return satanicCircleDescription=_hx_v; }
		void satanicCircleLoad( ::Dynamic done, ::Dynamic failure);
		::Dynamic satanicCircleLoad_dyn();

		void satanicCircleUnload();
		::Dynamic satanicCircleUnload_dyn();

		 ::kha::Image tiles;
		inline  ::kha::Image _hx_set_tiles(hx::StackContext *_hx_ctx, ::kha::Image _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return tiles=_hx_v; }
		::String tilesName;
		inline ::String _hx_set_tilesName(hx::StackContext *_hx_ctx,::String _hx_v) { HX_OBJ_WB(this,_hx_v.raw_ref()) return tilesName=_hx_v; }
		 ::Dynamic tilesDescription;
		inline  ::Dynamic _hx_set_tilesDescription(hx::StackContext *_hx_ctx, ::Dynamic _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return tilesDescription=_hx_v; }
		void tilesLoad( ::Dynamic done, ::Dynamic failure);
		::Dynamic tilesLoad_dyn();

		void tilesUnload();
		::Dynamic tilesUnload_dyn();

		::Array< ::String > names;
		inline ::Array< ::String > _hx_set_names(hx::StackContext *_hx_ctx,::Array< ::String > _hx_v) { HX_OBJ_WB(this,_hx_v.mPtr) return names=_hx_v; }
};

} // end namespace kha
} // end namespace _Assets

#endif /* INCLUDED_kha__Assets_ImageList */ 
