// Generated by Haxe 4.0.5
#ifndef INCLUDED_differ_shapes_InfiniteState
#define INCLUDED_differ_shapes_InfiniteState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(differ,shapes,InfiniteState)
namespace differ{
namespace shapes{


class InfiniteState_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef InfiniteState_obj OBJ_;

	public:
		InfiniteState_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("differ.shapes.InfiniteState",7d,a9,1b,a7); }
		::String __ToString() const { return HX_("InfiniteState.",11,cf,09,3c) + _hx_tag; }

		static ::differ::shapes::InfiniteState infinite;
		static inline ::differ::shapes::InfiniteState infinite_dyn() { return infinite; }
		static ::differ::shapes::InfiniteState infinite_from_start;
		static inline ::differ::shapes::InfiniteState infinite_from_start_dyn() { return infinite_from_start; }
		static ::differ::shapes::InfiniteState not_infinite;
		static inline ::differ::shapes::InfiniteState not_infinite_dyn() { return not_infinite; }
};

} // end namespace differ
} // end namespace shapes

#endif /* INCLUDED_differ_shapes_InfiniteState */ 
